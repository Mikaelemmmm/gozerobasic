// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package server

import (
	"context"

	"gozerobasic/app/services/message/internal/logic"
	"gozerobasic/app/services/message/internal/svc"
	"gozerobasic/app/services/message/message"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) SendCaptcha(ctx context.Context, in *message.SendCaptchaReq) (*message.SendCaptchaResp, error) {
	l := logic.NewSendCaptchaLogic(ctx, s.svcCtx)
	return l.SendCaptcha(in)
}

func (s *MessageServer) ValidateCaptcha(ctx context.Context, in *message.ValidateCaptchaReq) (*message.ValidateCaptchaResp, error) {
	l := logic.NewValidateCaptchaLogic(ctx, s.svcCtx)
	return l.ValidateCaptcha(in)
}
